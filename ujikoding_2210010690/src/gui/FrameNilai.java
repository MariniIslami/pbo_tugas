/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;
import javax.swing.JOptionPane;
import sys.crudTable;

/**
 *
 * @author LENOVO
 */
public class FrameNilai extends javax.swing.JFrame {
    String judulkolom[] = {"npm", "nama", "ips1", "ips2", "ips3", "ips4", "ips5", "ips6", "ips7", "ipk"};
    int lebarkolom[] = {100, 200, 50, 50, 50, 50, 50, 50, 50, 50};
    String SQL = "SELECT * FROM khs";

    /**
     * Creates new form FrameNilai
     */
    private crudTable myObject;
    public FrameNilai() {
        initComponents();
        this.setLocationRelativeTo(null);
        myObject = new crudTable();
        myObject.settingJudulTabel(TableNilai, judulkolom);
        myObject.settingLebarKolom(TableNilai, lebarkolom);
        myObject.tampilTabel(TableNilai, SQL, judulkolom);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        FieldNPM = new javax.swing.JTextField();
        FieldNama = new javax.swing.JTextField();
        FieldIPS1 = new javax.swing.JTextField();
        FieldIPS2 = new javax.swing.JTextField();
        FieldIPS3 = new javax.swing.JTextField();
        FieldIPS4 = new javax.swing.JTextField();
        FieldIPS5 = new javax.swing.JTextField();
        FieldIPS6 = new javax.swing.JTextField();
        FieldIPS7 = new javax.swing.JTextField();
        FieldIPK = new javax.swing.JTextField();
        btnSimpan = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableNilai = new javax.swing.JTable();
        btnCetak = new javax.swing.JButton();

        jLabel10.setText("jLabel10");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("NPM");

        jLabel2.setText("Nama");

        jLabel3.setText("IPS 1");

        jLabel4.setText("IPS 2");

        jLabel5.setText("IPS 3");

        jLabel6.setText("IPS 4");

        jLabel7.setText("IPS 5");

        jLabel8.setText("IPS 6");

        jLabel9.setText("IPS 7");

        jLabel11.setText("IPK");

        FieldNPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldNPMActionPerformed(evt);
            }
        });

        FieldIPS1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldIPS1ActionPerformed(evt);
            }
        });

        FieldIPS2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldIPS2ActionPerformed(evt);
            }
        });

        FieldIPS5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldIPS5ActionPerformed(evt);
            }
        });

        btnSimpan.setText("SIMPAN");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnUbah.setText("UBAH");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setText("HAPUS");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        TableNilai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableNilai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableNilaiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableNilai);

        btnCetak.setText("CETAK");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(FieldNPM, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                    .addComponent(FieldNama)
                    .addComponent(FieldIPS1)
                    .addComponent(FieldIPS2)
                    .addComponent(FieldIPS3)
                    .addComponent(FieldIPS4)
                    .addComponent(FieldIPS5)
                    .addComponent(FieldIPS6)
                    .addComponent(FieldIPS7)
                    .addComponent(FieldIPK))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSimpan)
                        .addGap(18, 18, 18)
                        .addComponent(btnUbah)
                        .addGap(18, 18, 18)
                        .addComponent(btnHapus)
                        .addGap(18, 18, 18)
                        .addComponent(btnCetak))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(FieldNPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(FieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSimpan)
                            .addComponent(btnUbah)
                            .addComponent(btnHapus)
                            .addComponent(btnCetak))))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(FieldIPS1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(22, 22, 22))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(FieldIPS2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(FieldIPS3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FieldIPS4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(FieldIPS5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(FieldIPS6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(FieldIPS7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FieldIPK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FieldNPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldNPMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldNPMActionPerformed

    private void FieldIPS1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldIPS1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldIPS1ActionPerformed

    private void FieldIPS2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldIPS2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldIPS2ActionPerformed

    private void FieldIPS5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldIPS5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldIPS5ActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        try {
        // Ambil data dari form
        String npm = FieldNPM.getText().trim();
        String nama = FieldNama.getText().trim();
        double ips1 = Double.parseDouble(FieldIPS1.getText().trim());
        double ips2 = Double.parseDouble(FieldIPS2.getText().trim());
        double ips3 = Double.parseDouble(FieldIPS3.getText().trim());
        double ips4 = Double.parseDouble(FieldIPS4.getText().trim());
        double ips5 = Double.parseDouble(FieldIPS5.getText().trim());
        double ips6 = Double.parseDouble(FieldIPS6.getText().trim());
        double ips7 = Double.parseDouble(FieldIPS7.getText().trim());

        // Hitung ulang IPK (rata-rata dari IPS1 hingga IPS7)
        double ipk = (ips1 + ips2 + ips3 + ips4 + ips5 + ips6 + ips7) / 7;

        // Format IPK menjadi 2 angka di belakang koma (opsional)
        ipk = Math.round(ipk * 100.0) / 100.0;

        // Data yang akan diupdate
        String[] fields = {"nama", "ips1", "ips2", "ips3", "ips4", "ips5", "ips6", "ips7", "ipk"};
        String[] values = {
            nama,
            String.valueOf(ips1),
            String.valueOf(ips2),
            String.valueOf(ips3),
            String.valueOf(ips4),
            String.valueOf(ips5),
            String.valueOf(ips6),
            String.valueOf(ips7),
            String.valueOf(ipk)
        };

        // Update data menggunakan fungsi CRUD dinamis
        String[] isiPrimary = {"npm"}; 
            myObject.UbahDinamis("khs", "npm", FieldNPM.getText(), fields, values);

        // Tampilkan kembali data ke tabel
        myObject.tampilTabel(TableNilai, SQL, judulkolom);
        FieldIPK.setText(String.valueOf(ipk));

        // Berikan notifikasi kepada pengguna
        JOptionPane.showMessageDialog(this, "Data berhasil diperbarui!");

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Harap masukkan nilai IPS dengan format angka yang valid!", "Error", JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        try {
        // Ambil data dari form
        String npm = FieldNPM.getText().trim();
        String nama = FieldNama.getText().trim();
        double ips1 = Double.parseDouble(FieldIPS1.getText().trim());
        double ips2 = Double.parseDouble(FieldIPS2.getText().trim());
        double ips3 = Double.parseDouble(FieldIPS3.getText().trim());
        double ips4 = Double.parseDouble(FieldIPS4.getText().trim());
        double ips5 = Double.parseDouble(FieldIPS5.getText().trim());
        double ips6 = Double.parseDouble(FieldIPS6.getText().trim());
        double ips7 = Double.parseDouble(FieldIPS7.getText().trim());

        // Hitung IPK (rata-rata dari IPS1 hingga IPS7)
        double ipk = (ips1 + ips2 + ips3 + ips4 + ips5 + ips6 + ips7) / 7;

        // Format IPK menjadi 2 angka di belakang koma (opsional)
        ipk = Math.round(ipk * 100.0) / 100.0;

        // Simpan data ke database menggunakan fungsi CRUD dinamis
        String[] fields = {"npm", "nama", "ips1", "ips2", "ips3", "ips4", "ips5", "ips6", "ips7", "ipk"};
        String[] values = {
            npm,
            nama,
            String.valueOf(ips1),
            String.valueOf(ips2),
            String.valueOf(ips3),
            String.valueOf(ips4),
            String.valueOf(ips5),
            String.valueOf(ips6),
            String.valueOf(ips7),
            String.valueOf(ipk)
        };
        myObject.SimpanDinamis("khs", fields, values);

        // Tampilkan IPK ke text field atau area lain di GUI
        FieldIPK.setText(String.valueOf(ipk));

        // Berikan notifikasi kepada pengguna
        JOptionPane.showMessageDialog(this, "Data berhasil disimpan! IPK: " + ipk);

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Harap masukkan nilai IPS dengan format angka yang valid!", "Error", JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
        myObject.tampilTabel(TableNilai, SQL, judulkolom);
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        myObject.HapusDinamis("khs", "npm", FieldNPM.getText());
        myObject.tampilTabel(TableNilai, SQL, judulkolom);
    }//GEN-LAST:event_btnHapusActionPerformed

    private void TableNilaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableNilaiMouseClicked
        int selectedRow = TableNilai.getSelectedRow();
        if (selectedRow != -1) {
            FieldNPM.setText(TableNilai.getValueAt(selectedRow, 0).toString());
            FieldNama.setText(TableNilai.getValueAt(selectedRow, 1).toString());
            FieldIPS1.setText(TableNilai.getValueAt(selectedRow, 2).toString());
            FieldIPS2.setText(TableNilai.getValueAt(selectedRow, 3).toString());
            FieldIPS3.setText(TableNilai.getValueAt(selectedRow, 4).toString());
            FieldIPS4.setText(TableNilai.getValueAt(selectedRow, 5).toString());
            FieldIPS5.setText(TableNilai.getValueAt(selectedRow, 6).toString());
            FieldIPS6.setText(TableNilai.getValueAt(selectedRow, 7).toString());
            FieldIPS7.setText(TableNilai.getValueAt(selectedRow, 8).toString());
            FieldIPK.setText(TableNilai.getValueAt(selectedRow, 9).toString());
        }
    }//GEN-LAST:event_TableNilaiMouseClicked

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
        try {
            String laporanfile = "src/laporan/laporan.jrxml";
            String SQL = "SELECT * From khs";
            
            myObject.tampilLaporan(laporanfile, SQL);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnCetakActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameNilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameNilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameNilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameNilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameNilai().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FieldIPK;
    private javax.swing.JTextField FieldIPS1;
    private javax.swing.JTextField FieldIPS2;
    private javax.swing.JTextField FieldIPS3;
    private javax.swing.JTextField FieldIPS4;
    private javax.swing.JTextField FieldIPS5;
    private javax.swing.JTextField FieldIPS6;
    private javax.swing.JTextField FieldIPS7;
    private javax.swing.JTextField FieldNPM;
    private javax.swing.JTextField FieldNama;
    private javax.swing.JTable TableNilai;
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
